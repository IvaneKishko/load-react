{"version":3,"file":"static/js/289.6b08a33e.chunk.js","mappings":"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","sources":["loads/pages/NewLoad.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport LOCATIONDATA from \"../../locationData\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth.context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport \"./NewLoad.css\";\r\n\r\nconst NewLoad = () => {\r\n  // const today = new Date().toISOString().split(\"T\")[0];\r\n  const auth = useContext(AuthContext);\r\n  let navigate = useNavigate();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, setFormState] = useState({\r\n    model: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    address: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    payment: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    price: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    phoneNumber: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    pickupDate: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    pickupLocation: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    dropOffLocation: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    image: {\r\n      value: null,\r\n      isValid: false,\r\n    },\r\n    isValid: true,\r\n  });\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    console.log(process.env.REACT_APP_BACKEND_URL + \"/loads\");\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"model\", formState.model);\r\n      formData.append(\"pickupDate\", formState.pickupDate);\r\n      formData.append(\"pickupLocation\", formState.pickupLocation);\r\n      formData.append(\"dropOffLocation\", formState.dropOffLocation);\r\n      formData.append(\"price\", formState.price);\r\n      formData.append(\"phoneNumber\", formState.phoneNumber);\r\n      formData.append(\"payment\", formState.payment);\r\n      formData.append(\"address\", formState.address);\r\n      formData.append(\"image\", formState.image.value);\r\n      formData.append(\"companyName\", auth.companyName);\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/loads\", \"POST\", formData, {\r\n        Authorization: \"Bearer \" + auth.token,\r\n      });\r\n      navigate(`/${auth.userId}/loads`);\r\n    } catch (err) {}\r\n  };\r\n\r\n  function handleChange(eventOrSelectedOption) {\r\n    const { name, value } = eventOrSelectedOption.target\r\n      ? eventOrSelectedOption.target\r\n      : eventOrSelectedOption;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n    console.log(name, value);\r\n  }\r\n\r\n  const imageInputHandler = (name, value, isValid) => {\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      [name]: {\r\n        ...prevState[name],\r\n        value: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"load-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"model\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Model\"\r\n          name=\"model\"\r\n          onChange={handleChange}\r\n          value={formState.model.value}\r\n          required\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Full address\"\r\n          name=\"address\"\r\n          onChange={handleChange}\r\n          value={formState.address.value}\r\n          required\r\n        />\r\n        <fieldset className=\"radio-buttons\">\r\n          <legend>Payment Method</legend>\r\n          <Input\r\n            element=\"radio\"\r\n            type=\"radio\"\r\n            id=\"cash\"\r\n            label=\"Cash\"\r\n            name=\"payment\"\r\n            value=\"cash\"\r\n            checked={formState.payment === \"cash\"}\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            element=\"radio\"\r\n            type=\"radio\"\r\n            id=\"direct\"\r\n            label=\"Direct\"\r\n            name=\"payment\"\r\n            value=\"direct\"\r\n            checked={formState.payment === \"direct\"}\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            element=\"radio\"\r\n            type=\"radio\"\r\n            id=\"check\"\r\n            label=\"Check\"\r\n            name=\"payment\"\r\n            value=\"check\"\r\n            checked={formState.payment === \"check\"}\r\n            onChange={handleChange}\r\n          />\r\n        </fieldset>\r\n        <Input\r\n          id=\"price\"\r\n          element=\"input\"\r\n          type=\"number\"\r\n          label=\"Price USD$\"\r\n          name=\"price\"\r\n          onChange={handleChange}\r\n          value={formState.price.value}\r\n          required\r\n        />\r\n        <Input\r\n          id=\"phoneNumber\"\r\n          element=\"input\"\r\n          type=\"tel\"\r\n          label=\"Phone Number\"\r\n          name=\"phoneNumber\"\r\n          onChange={handleChange}\r\n          value={formState.phoneNumber.value}\r\n          required\r\n        />\r\n        <Input\r\n          id=\"pickupDate\"\r\n          element=\"date\"\r\n          type=\"date\"\r\n          label=\"Ready for Pickup\"\r\n          name=\"pickupDate\"\r\n          onChange={handleChange}\r\n          value={formState.pickupDate.value}\r\n        />\r\n        {/* <div>\r\n          <label htmlFor=\"pickup-location\">Pickup Location</label>\r\n          <input \r\n              id=\"pickup-location\" \r\n              list=\"data\" \r\n              placeholder=\"Enter or select a pickup location\" \r\n              className=\"dropdown-input\"\r\n          />\r\n          <datalist id=\"data\" className=\"datalist\">\r\n              {LOCATIONDATA.map((location, index) => (\r\n                  <option key={index} value={location}>{location}</option>\r\n              ))}\r\n          </datalist>\r\n      </div> */}\r\n        <div>\r\n          <label htmlFor=\"pickupLocation\">Pickup location:</label>\r\n          <Select\r\n            options={LOCATIONDATA}\r\n            id=\"pickupLocation\"\r\n            onChange={(option) =>\r\n              handleChange({ ...option, name: \"pickupLocation\" })\r\n            }\r\n            name=\"pickupLocation\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dropOffLocation\">Drop off location:</label>\r\n          <Select\r\n            options={LOCATIONDATA}\r\n            id=\"dropOffLocation\"\r\n            onChange={(option) =>\r\n              handleChange({ ...option, name: \"dropOffLocation\" })\r\n            }\r\n            name=\"dropOffLocation\"\r\n            required\r\n          />\r\n        </div>\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={imageInputHandler}\r\n          required\r\n          center\r\n          errorText=\"\"\r\n        />\r\n        <Button type=\"submit\">ADD LOAD</Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewLoad;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // check is file is not undefined\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n        setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    // state is not updated immediately it is scheduled, so when we send argument it has old state\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = true;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n        required\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React from \"react\";\r\n\r\nimport './Input.css'\r\n\r\nconst Input = (props) => {\r\n\r\n  let element;\r\n\r\n  if (props.element === \"input\") {\r\n    element = (\r\n      <input\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        onChange={props.onChange}\r\n        value={props.value}\r\n        required\r\n      />\r\n    );\r\n  } else if (props.element === \"email\") {\r\n    element = (\r\n      <input\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        onChange={props.onChange}\r\n        value={props.value}\r\n        required\r\n      />\r\n    );\r\n  } else if (props.element === \"password\") {\r\n    element = (\r\n      <input\r\n        type=\"password\"\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        onChange={props.onChange}\r\n        value={props.value}\r\n        required\r\n      />\r\n    );\r\n  } else if (props.element === \"radio\") {\r\n    element = (\r\n      <input\r\n        type=\"radio\"\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.onChange}\r\n        required\r\n      />\r\n    );\r\n  }else if (props.element === \"date\") {\r\n    element = (\r\n      <input\r\n        type=\"date\"\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.onChange}\r\n        required\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`${props.element !== 'radio' && 'form-control'}`}>\r\n      <label for={props.id}>{props.label}</label>\r\n      {element}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"names":["_ref","auth","useContext","AuthContext","navigate","useNavigate","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useState","useState","model","value","isValid","address","payment","price","phoneNumber","pickupDate","pickupLocation","dropOffLocation","image","_useState2","_slicedToArray","formState","setFormState","handleChange","eventOrSelectedOption","_ref2","target","name","prevState","_objectSpread","_defineProperty","console","log","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","process","FormData","append","companyName","Authorization","token","concat","userId","t0","stop","apply","arguments","LoadingSpinner","asOverlay","Input","id","element","type","label","onChange","required","checked","htmlFor","Select","options","LOCATIONDATA","option","ImageUpload","onInput","center","errorText","Button","props","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","length","src","alt","onClick","current","click","placeholder","for"],"sourceRoot":""}